<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="kh.spring.pisic.springsecuriry.model.service"/>
	<context:component-scan base-package="kh.spring.pisic.springsecuriry.util"/>
	<context:component-scan base-package="kh.spring.pisic"/>
	
	<!-- 로그인성공 핸들러 -->
	<bean class="kh.spring.pisic.springsecurity.util.AuthLoginSuccessHandler" id="authLoginSuccess">
		<property name="m_id" value="m_id"></property>
		<property name="defaultUrl" value="/main"></property>
	</bean>
	
	<!-- 로그인실패 핸들러 -->
	<bean class="kh.spring.pisic.springsecurity.util.AuthLoginFailureHandler" id="authLoginFailure">
		<property name="m_id" value="m_id"></property>
		<property name="m_password" value="m_password"></property>
		<property name="errormsg_name" value="errormsg_name"></property>
		<property name="defaultFailureUrl" value="/login"></property>
	</bean>
	
	<!-- provider, service -->
	<bean class="kh.spring.pisic.springsecurity.model.service.CustomAuthenticationProvider" id="authenticationProvider"/>
	<bean class="kh.spring.pisic.springsecurity.model.service.CustomUserDetailsService" id="userDetailsService"/>
	
	<!-- resources 폴더 안은 security X -->
	<security:http pattern="/resources/**" security="none"></security:http>
	<security:http pattern="/error/**" security="none"></security:http>
	
	<!-- normal -->
	<security:http use-expressions="true">
		<security:intercept-url pattern="/test/list" access="permitAll()"/>
		<security:intercept-url pattern="/login" access="isAnonymous()"/>
		<security:intercept-url pattern="/join" access="isAnonymous()"/>
		<security:intercept-url pattern="/findId" access="isAnonymous()"/>
		<security:intercept-url pattern="/findIdA" access="isAnonymous()"/>
		<security:intercept-url pattern="/findPw" access="isAnonymous()"/>
		<security:intercept-url pattern="/findPwA" access="isAnonymous()"/>
		<security:intercept-url pattern="/qna/qnaWrite" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/membership/**" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/payments/**" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/pjBoard/write" access="hasAnyRole('ROLE_MEMBER', 'ROLE_ADMIN')"/>
		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		
		<security:form-login login-page="/login"
							authentication-success-handler-ref="authLoginSuccess"
							authentication-failure-handler-ref="authLoginFailure"
							username-parameter="m_id"
							password-parameter="m_password"/>
		<security:logout logout-url="/logout"
				logout-success-url="/main"
				invalidate-session="true"
				delete-cookies="JSESSIONID, SPRING_SECURITY_REMEMBER_ME_COOKIE"/>
		<!-- 자동로그인 (4주) -->
		<security:remember-me data-source-ref="dataSource" authentication-success-handler-ref="authLoginSuccess" token-validity-seconds="2419200"/>
	</security:http>
	
	<!-- 임시 로그인 test -->
	<!-- <security:authentication-manager>
		<security:authentication-provider>
       	  	아래 name, password를 통해서 임시 로그인 성공 여부 확인
        	<security:user-service>
              <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
              <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN" />
            </security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> -->

	<!-- DB 통해 로그인 성공 여부 확인 
    	참고(로그인) : users-by-username-query 생략시 select username,password,enabled from users where username = ? 
		참고(ROLE) : authorities-by-username-query 생략시 select username,authority from authorities where username = ?
	-->
	<security:authentication-manager>
		<security:authentication-provider ref="authenticationProvider"/>
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder hash="bcrypt" />		
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- 비밀번호 암호화 -->
	<bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="bCryptPasswordEncoder"/>

</beans>