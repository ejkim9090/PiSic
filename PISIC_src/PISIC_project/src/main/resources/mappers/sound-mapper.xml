<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Sound">

<resultMap type="Album" id="AlbumResultMap">
	<result column="a_no" property="a_no"/>
	<result column="a_name" property="a_name"/>
	<result column="a_cover" property="a_cover"/>
	<result column="a_date" property="a_date"/>
	<result column="a_publishing" property="a_publishing"/>
	<result column="a_agency" property="a_agency"/>
	<result column="a_introduce1" property="a_introduce1"/>
	<result column="a_introduce2" property="a_introduce2"/>
	<result column="artist_no" property="artist_no"/>
	<result column="artist_name" property="artist_name"/>
	<collection column="a_no" property="sounds" select="selectAlbumSound"></collection>
</resultMap>

<resultMap type="Sound" id="soundResultMap">
	<result column="s_no" property="s_no"/>
	<result column="a_no" property="a_no"/>
	<result column="s_name" property="s_name"/>
	<result column="s_lyrics1" property="s_lyrics1"/>
	<result column="s_lyrics2" property="s_lyrics2"/>
	<result column="s_age_yn" property="s_age_yn"/>
	<result column="s_path" property="s_path"/>
	<result column="g_no" property="g_no"/>
	<result column="cnt_like" property="cnt_like"/>
	<result column="a_cover" property="a_cover"/>
	<result column="a_name" property="a_name"/>
	<result column="g_name" property="g_name"/>
	<collection column="{a_no=a_no, s_no=s_no}" property="soundRecomment" select="selectSoundRecommentList"></collection>
	<collection column="{a_no=a_no, s_no=s_no}" property="singers" select="soundSingerList"></collection>
	<collection column="{a_no=a_no, s_no=s_no}" property="sound_writers" select="soundWriterList"></collection>
	<collection column="{a_no=a_no, s_no=s_no}" property="sound_composers" select="soundComposerList"></collection>
</resultMap>

<!-- 앨범상세조회 - 앨범정보 -->
<select id="selectAlbum" resultMap="AlbumResultMap">
	select album.a_no, album.a_name, album.a_cover, album.a_date, 
	album.a_publishing, album.a_agency, 
	album.a_introduce1, album.a_introduce2, art.artist_name, art.artist_no
	from album album 
	join artist art on album.artist_no = art.artist_no 
	where album.a_no=#{a_no}
</select>

<!-- 앨범상세조회 - 수록곡 -->
<select id="selectAlbumSound" resultMap="soundResultMap">
	select sound.s_no, sound.a_no, sound.s_name, 
	sound.s_lyrics1, sound.s_lyrics2, sound.s_age_yn, sound.s_path, album.artist_no, album.a_name
	from sound sound
	join album album on sound.a_no=album.a_no 
	where album.a_no=#{a_no}
</select>

<!-- 곡 - 가수 -->
<select id="soundSingerList" parameterType="map" resultType="Singer">
	select artist.artist_name, artist.artist_no
	from sound sound
	join singer singer on sound.s_no=singer.s_no and sound.a_no=singer.a_no
	join artist artist on singer.artist_no = artist.artist_no 
	where sound.a_no=#{a_no} and sound.s_no=#{s_no}
</select>

<!-- 곡 - 작사가 -->
<select id="soundWriterList" parameterType="map" resultType="Writer">
	select artist.artist_name, artist.artist_no
	from sound_writer writer 
	join artist artist on writer.artist_no = artist.artist_no
	where writer.a_no=#{a_no} and writer.s_no=#{s_no} 
</select>

<!-- 곡 - 작곡가 -->
<select id="soundComposerList" parameterType="map" resultType="Composer">
	select artist.artist_name, artist.artist_no
	from sound_composer composer 
	join artist artist on composer.artist_no = artist.artist_no
	where composer.a_no=#{a_no} and composer.s_no=#{s_no}
</select>

<!-- 곡 상세조회 - 곡정보 -->
<select id="selectSound" parameterType="Sound" resultMap="soundResultMap">
	select (select count(*) from sound_like where a_no=#{a_no} and s_no=#{s_no}) cnt_like
    , sound.s_no, sound.a_no, sound.s_name, sound.s_lyrics1, sound.s_lyrics2
    , sound.s_path, g.g_name, album.a_cover
	from sound sound 
	join album album on sound.a_no = album.a_no
    join genre g using(g_no)
	where sound.a_no=#{a_no} and sound.s_no=#{s_no}
</select>

<!-- 곡 상세조회 - 수록 앨범 -->
<select id="selectSoundAlbum" parameterType="Sound" resultType="Album">
	select album.a_no, album.a_name, album.a_cover, album.a_date, art.artist_name
	from album album 
	join artist art on album.artist_no = art.artist_no 
	where album.a_no=#{a_no}
</select>

<!-- 곡 상세조회 - 관련 아티스트 앨범 -->
<select id="selectRelArtistAlbum" parameterType="Sound" resultType="Album">
	select singer.artist_no, artist.artist_name, album.a_name, album.a_no, album.a_cover, album.a_date 
	from sound sound 
	join singer singer on sound.s_no = singer.s_no and sound.a_no = singer.a_no
	join artist artist on singer.artist_no = artist.artist_no
	join album album on artist.artist_no = album.artist_no
	where sound.s_no=#{s_no} and sound.a_no=#{a_no}
	order by album.a_date desc
</select>

<!-- 곡 상세조회 - 관련 플레이리스트게시판 -->
<select id="selectRelPlaylistBoard" parameterType="Sound" resultType="PjBoard">
	select DISTINCT board.b_no, board.b_title, board.b_writer
	, 
	board.b_date
	<!-- trunc(board.b_date,'DD') b_date -->
	, pl.l_image
	from sound sound 
	join playlist_content pc on sound.s_no = pc.s_no and sound.a_no = pc.a_no
	join playlist pl on pc.l_no = pl.l_no and pc.m_id = pl.m_id
	join board board on board.l_no = pl.l_no and board.m_id = pl.m_id
	where sound.s_no=#{s_no} and sound.a_no=#{a_no}
	order by b_no
</select>

<!-- 곡 상세조회 - 내가 처음 들은 날 -->
<select id="selectSoundFirstDay" parameterType="hashmap" resultType="string">
	select to_char(p_date,'yyyy-mm-dd') p_date 
	from (select p_date from playinfo 
			where s_no=#{sound.s_no} and a_no=#{sound.a_no} and m_id=#{member.m_id} 
			order by p_date) 
	where rownum=1
</select>

<!-- 곡 상세조회 - 총 감상 횟수 -->
<select id="selectTotalListen" parameterType="hashmap" resultType="int">
	select count(*) from playinfo 
	where s_no=#{sound.s_no} and a_no=#{sound.a_no} and m_id=#{member.m_id}
</select>

<!-- 곡 상세조회 - 댓글쓰기 -->
<select id="insertSoundRecomment" parameterType="hashmap">
	insert into sound_recomment 
	values 
	( (select nvl(max(s_r_no),0)+1 from sound_recomment)
	, #{soundRecomment.s_r_content} , #{member.m_nickname}
	, sysdate, #{soundRecomment.s_no},#{soundRecomment.a_no}, #{member.m_id})
</select>

<!-- 곡 상세조회 - 댓글 목록 -->
<select id="selectSoundRecommentList" parameterType="map" resultType="SoundRecomment">
	select sr.s_r_no, sr.s_r_content, sr.s_r_writer, sr.s_r_date 
	, member.m_id, member.m_profile
	from sound_recomment sr
	join member member on sr.m_id = member.m_id
	where a_no = #{a_no} and s_no = #{s_no}
</select>

<!-- 곡 상세조회 - 댓글 삭제 -->
<delete id="deleteSoundRecomment" parameterType="hashmap">
	delete from sound_recomment 
	where m_id=#{member.m_id} and s_r_no=#{soundRecomment.s_r_no}
</delete>

<!-- 선택 재생 -->
<select id="selectSoundList" parameterType="list" resultMap="soundResultMap">
	select s_name, s_path,  album.a_cover, sound.a_no, sound.s_no
	from sound sound 
	join album album on sound.a_no = album.a_no
	where (sound.a_no, sound.s_no) in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			(#{item.a_no},#{item.s_no})
		</foreach>
	<!-- order by rownum desc -->
</select>

<!-- 노래 좋아요 -->
<insert id="insertLike" parameterType="hashmap">
	insert into sound_like
	(m_id, s_no, a_no, like_date)
	values
	(#{member.m_id}, #{sound.s_no}, #{sound.a_no}, default)
</insert>

<!-- 노래 좋아요 여부 확인 -->
<select id="checkLike" parameterType="hashmap" resultType="_int">
	select count(*) from sound_like 
	where m_id = #{member.m_id}
	and a_no = #{sound.a_no} 
	and s_no = #{sound.s_no}
</select>

<!-- 노래 좋아요 취소 -->
<delete id="deleteLike" parameterType="hashmap">
	delete from sound_like
	where m_id = #{member.m_id}
	and a_no = #{sound.a_no} 
	and s_no = #{sound.s_no}
</delete>

<!-- 데일리 감상자 수 -->
<select id="selectDailyListen" parameterType="Sound" resultType="string">
	select t2.daily_cnt from 
	(select rownum rnum, t1.cnt daily_cnt, t1.s_no s_no, t1.a_no a_no from  
		(select count(*) cnt ,s_no,a_no 
		from playinfo where p_date &lt;= SYSDATE and p_date &gt; (select SYSDATE -1 from dual) 
		group by s_no, a_no order by cnt desc)t1 
    )t2 
    where t2.a_no=#{a_no} and t2.s_no=#{s_no}
</select>

<!-- 어제의 차트 순위 -->
<select id="selectYesterChart" parameterType="Sound" resultType="string">
	select t2.rnum from 
	(select rownum rnum, t1.cnt daily_cnt, t1.s_no s_no, t1.a_no a_no from  
		(select count(*) cnt ,s_no,a_no 
		from playinfo where p_date &lt;= SYSDATE-1 and p_date &gt; (select SYSDATE -2 from dual) 
		group by s_no, a_no order by cnt desc)t1 
    )t2 
    where t2.a_no=#{a_no} and t2.s_no=#{s_no}
</select>



</mapper>
